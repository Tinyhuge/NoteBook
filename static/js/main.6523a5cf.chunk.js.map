{"version":3,"sources":["Api/Note.js","Entry/Login.js","Components/NoteCard.js","Components/NoteList.js","Components/MyAccount.js","Components/ResetPassword.js","Components/EditProfile.js","Components/UpdateNote.js","Components/ShowNoteByCategory.js","Entry/SignUp.js","Ui/NavBar.js","Components/CreateNotes.js","Components/App.js","index.js"],"names":["axios","create","baseURL","Login","props","login","e","a","preventDefault","request","state","api","post","then","response","console","log","data","toast","success","position","localStorage","getItem","removeItem","setItem","token","history","push","error","username","password","Form","onSubmit","this","FormGroup","Label","for","Input","id","name","type","placeholder","required","onChange","setState","target","value","style","height","Container","className","Button","color","outline","React","Component","NoteCard","note","title","description","createdAt","lastModified","noteCategory","Card","body","CardTitle","tag","CardText","CardSubtitle","to","pathname","onClick","deleteNoteFromServer","NoteList","noteId","deleteNote","renderNoteList","notees","map","MyAccount","fetchAccountDetails","get","email","enabled","role","about","ResetPassword","updatePassword","password2","req","put","settingHeader","jwtToken","interceptors","use","config","headers","err","Promise","reject","fetchUserAccount","EditProfile","updateProfile","textShadow","UpdateNote","updateNote","location","ShowNoteByCategory","fetchNoteByCategory","notes","SignUp","createAccount","NavBar","useState","isOpen","setIsOpen","Navbar","padding","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","NavLink","divider","CreateNotes","createNote","createNoteHandler","event","index","prevState","App","setNotes","useEffect","document","fetchNotes","noteData","delete","FilteredNotesList","filter","allNotes","gettingAllNotes","Row","Col","md","path","render","exact","component","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6523a5cf.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:8090\",\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    login = async (e) => {\r\n\r\n        e.preventDefault();\r\n        const request = { ...this.state };\r\n\r\n        await api.post(\"/token\", request).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n\r\n                toast.success(\"Login Successfull...\", { position: \"bottom-center\" });\r\n\r\n                if (localStorage.getItem === \"authorization\") {\r\n                    localStorage.removeItem(\"authorization\");\r\n                }\r\n\r\n                localStorage.setItem(\"authorization\", response.data.token);\r\n\r\n                this.props.history.push(\"/\");\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Login to Your Account!</h2>\r\n                <Form onSubmit={this.login}>\r\n                    <FormGroup>\r\n                        <Label for=\"username\">Enter your email :</Label>\r\n                        <Input\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            type=\"email\"\r\n                            placeholder=\"yourmail@email.com\"\r\n                            required\r\n                            onChange={(e) => this.setState({ username: e.target.value })}\r\n                            value={this.state.username}\r\n                            style={{ height: 46 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Enter your password :</Label>\r\n                        <Input\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter your password...\"\r\n                            required\r\n                            onChange={(e) => this.setState({ password: e.target.value })}\r\n                            value={this.state.password}\r\n                            style={{ height: 46 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n\r\n                    <Container className=\"text-center\">\r\n                        <Button color=\"success\">Login to Account</Button>\r\n                        <Button color=\"warning mx-3\">Log Out</Button>\r\n                    </Container> <br />\r\n\r\n                    <Container className=\"text-center\">\r\n                        <Button outline color=\"warning\">Login With Google</Button>\r\n                        <Button color=\"primary mx-3\">Login With FaceBook</Button>\r\n                    </Container><br />\r\n\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Button, Card, CardBody, CardSubtitle, CardText, CardTitle, Container } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NoteCard = (props) => {\r\n\r\n    const { id, title, description, createdAt, lastModified, noteCategory } = props.note;\r\n\r\n    return (\r\n        <Container><br />\r\n            <Card body color=\"light\"><br />\r\n                <CardTitle tag=\"h2\">{title}</CardTitle><br />\r\n\r\n                <CardText tag=\"h6\">{description}</CardText><br />\r\n                <CardSubtitle>Created Date : {createdAt}</CardSubtitle><br />\r\n                <CardSubtitle>Modified Date : {lastModified}</CardSubtitle><br />\r\n\r\n                <Link to={{ pathname: `/view-note/${noteCategory}`, state: { note: props.note } }}>\r\n                    <CardSubtitle color=\"success\" tag=\"h4\">{noteCategory}</CardSubtitle><br />\r\n                </Link>\r\n\r\n\r\n                <Container className=\"text-center\">\r\n\r\n                    <Link to={{ pathname: `/note/${id}`, state: { note: props.note } }}>\r\n                        <Button color=\"primary\" outline>Edit Note</Button>\r\n                    </Link>\r\n\r\n                    <Button\r\n                        onClick={() => props.deleteNoteFromServer(id)}\r\n                        color=\"danger mx-3\">DeleteNote</Button>\r\n                </Container><br />\r\n\r\n            </Card><br />\r\n\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NoteCard;","import React, { useRef, useState } from \"react\";\r\nimport { Button, Card, CardBody, CardSubtitle, CardTitle, Container, Input } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoteCard from \"./NoteCard\";\r\n\r\nconst NoteList = (props) => {\r\n\r\n    const deleteNoteFromServer = (noteId) => {\r\n        props.deleteNote(noteId);\r\n    }\r\n\r\n    const renderNoteList = props.notees.map((note) => {\r\n        return <NoteCard note={note} deleteNoteFromServer={deleteNoteFromServer} key={note.id} />;\r\n    });\r\n\r\n    /*  const renderContactList = props.contacts.map((contact) => {\r\n          return <ContactCard contact={contact} clickHandler={deleteContactHandler} key={contact.id} />;\r\n          console.log(contact);\r\n          toast.success(\"RenderdContact Method from ContactList Component Fired..\");\r\n      });*/\r\n\r\n    return (\r\n        <div><br />\r\n            <h4 className=\"text-center\">Saved Notes</h4>\r\n            <div className=\"text-center\"></div>\r\n            <div className=\"text-center\">{renderNoteList}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteList;","import React, { Component } from \"react\";\r\nimport { Button, Col, Card, CardSubtitle, CardText, CardTitle, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MyAccount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            enabled: true,\r\n            role: \"\",\r\n            about: \"\",\r\n        }\r\n    }\r\n\r\n    //Methods Goes Here\r\n    fetchAccountDetails = async () => {\r\n\r\n        await api.get(\"/user\").then(\r\n            (response) => {\r\n                toast.success(\"Acount Details Fetched Successfully...\");\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    name: response.data.name,\r\n                    email: response.data.email,\r\n                    password: response.data.password,\r\n                    enabled: response.data.enabled,\r\n                    role: response.data.role,\r\n                    about: response.data.about,\r\n                });\r\n\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"Something Went Wrong While Fetching Account Details!!\");\r\n            }\r\n        )\r\n    }\r\n\r\n    //Fetching Data from Server just before rendering data\r\n    componentDidMount() {\r\n        this.fetchAccountDetails();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n\r\n                <h3>Welcome, {this.state.name}</h3><br />\r\n                <Container><br />\r\n                    <Card body color=\"light\"><br />\r\n\r\n                        <CardTitle tag=\"h2\">Name : {this.state.name}</CardTitle><br />\r\n                        <CardText tag=\"h4\">Email : {this.state.email}</CardText><br />\r\n                        <CardSubtitle tag=\"h6\">Password : {this.state.password}</CardSubtitle><br />\r\n\r\n                        <CardSubtitle tag=\"h5\">Account Enabled : {this.state.enabled}</CardSubtitle><br />\r\n                        <CardSubtitle tag=\"h5\">Role : {this.state.role}</CardSubtitle><br />\r\n                        <CardSubtitle tag=\"h5\">About : {this.state.about}</CardSubtitle><br />\r\n\r\n                        <Container className=\"text-center\">\r\n\r\n                            <Link to=\"edit-profile\">\r\n                                <Button color=\"primary\" outline>Edit Profile</Button>\r\n                            </Link>\r\n\r\n                            <Link to=\"/reset\">\r\n                                <Button color=\"danger mx-3\">Reset Password</Button>\r\n                            </Link>\r\n\r\n                        </Container><br />\r\n\r\n                    </Card><br />\r\n\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyAccount;","import React, { Component } from \"react\";\r\nimport { Button, Col, Card, CardSubtitle, CardText, CardTitle, Container, Form, FormGroup, Input, Label, Row, Toast } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: \"\",\r\n            password2: \"\",\r\n            name: \"\",\r\n        };\r\n    }\r\n\r\n    //Method Goes Here\r\n    updatePassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        //Checking For Password Match in Both Fields..\r\n        if (this.state.password !== this.state.password2) {\r\n            console.log(\"Both Password Should Match!!\");\r\n            toast.error(\"Both Password Should Match!!\");\r\n            return;\r\n        }\r\n\r\n        //  this.settingHeader();\r\n\r\n        const req = { password: this.state.password };\r\n        console.log(req);\r\n\r\n        await api.put(\"/reset\", req).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                toast.success(\"Password Changed Successfully...\");\r\n\r\n                //Removing JWT Token after changing password and redirecting to Login Again\r\n                if (localStorage.getItem === \"authorization\") {\r\n                    localStorage.removeItem(\"authorization\");\r\n                }\r\n\r\n                this.props.history.push(\"/login\");\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"Something Went Wrong While Resetting Password!!\");\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    //Setting Header of Auth-Token in every request\r\n    settingHeader = () => {\r\n        const jwtToken = localStorage.getItem(\"authorization\");\r\n\r\n        api.interceptors.request.use(\r\n            function (config) {\r\n                if (jwtToken) {\r\n                    config.headers[\"authorization\"] = \"Bearer \" + jwtToken;\r\n                    console.log(\"Yeah..Interceptor gets triggered manually\");\r\n                    toast.success(\"Auth Token Used..\");\r\n                }\r\n                return config;\r\n            },\r\n            function (err) {\r\n                return Promise.reject(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    fetchUserAccount = async () => {\r\n\r\n        this.settingHeader();\r\n\r\n        await api.post(\"/user\").then(\r\n            (response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    name: response.data.name,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    //Fetching Data From API Just Before Rendering...\r\n    componentDidMount() {\r\n        this.fetchUserAccount();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n                <h3>Welcome, {this.state.name}</h3><br />\r\n                <Form onSubmit={this.updatePassword}>\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Enter New Password :</Label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            required\r\n                            onChange={(e) => this.setState({ password: e.target.value })}\r\n                            value={this.state.password}\r\n                            placeholder=\"*****************\"\r\n                            style={{ height: 56 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"password2\">Enter New Password :</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"password2\"\r\n                            name=\"password2\"\r\n                            required\r\n                            onChange={(e) => this.setState({ password2: e.target.value })}\r\n                            value={this.state.password2}\r\n                            placeholder=\"Re-enter your password\"\r\n                            style={{ height: 56 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <Container className=\"text-left\">\r\n                        <Button color=\"success\">Reset Password</Button>\r\n                    </Container><br />\r\n\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResetPassword;","import React, { Component } from \"react\";\r\nimport { Button, Col, Card, CardSubtitle, CardText, CardTitle, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\n\r\nclass EditProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            enabled: true,\r\n            role: \"\",\r\n            about: \"\",\r\n        }\r\n    }\r\n\r\n    //Setting Header of Auth-Token in every request\r\n    settingHeader = () => {\r\n        const jwtToken = localStorage.getItem(\"authorization\");\r\n\r\n        api.interceptors.request.use(\r\n            function (config) {\r\n                if (jwtToken) {\r\n                    config.headers[\"authorization\"] = \"Bearer \" + jwtToken;\r\n                    console.log(\"Yeah..Interceptor gets triggered manually\");\r\n                    toast.success(\"Auth Token Used..\");\r\n                }\r\n                return config;\r\n            },\r\n            function (err) {\r\n                return Promise.reject(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    //Methods Here\r\n    updateProfile = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const request = { ...this.state };\r\n        await api.put(\"/user\", request).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                toast.success(\"Note Updated Successfully...\");\r\n                this.props.history.push(\"/\");\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"Something Went Wrong While Updating Note!!!\");\r\n            }\r\n        )\r\n    }\r\n\r\n    fetchUserAccount = async () => {\r\n\r\n        this.settingHeader();\r\n\r\n        await api.get(\"/user\").then(\r\n            (response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    name: response.data.name,\r\n                    email: response.data.email,\r\n                    about: response.data.about,\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    //Fetching Data From API Just Before Rendering...\r\n    componentDidMount() {\r\n        this.fetchUserAccount();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n                <h3>Welcome, {this.state.name}</h3><br />\r\n                <Form onSubmit={this.updateProfile}>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">My Name :</Label>\r\n                        <Input\r\n                            id=\"name\"\r\n\r\n                            name=\"name\"\r\n                            type=\"text\"\r\n\r\n                            required\r\n                            onChange={(e) => this.setState({ title: e.target.value })}\r\n                            value={this.state.name}\r\n                            style={{ height: 46 }, { textShadow: \"-moz-initial\" }}\r\n                        />\r\n                    </FormGroup> <br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"email\">My Email :</Label>\r\n                        <Input\r\n                            id=\"email\"\r\n\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n\r\n                            required\r\n                            onChange={(e) => this.setState({ title: e.target.value })}\r\n                            value={this.state.email}\r\n                            style={{ height: 46 }, { textShadow: \"-moz-initial\" }}\r\n                        />\r\n                    </FormGroup> <br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"about\">About Myself :</Label>\r\n                        <Input\r\n                            id=\"about\"\r\n\r\n                            name=\"about\"\r\n                            type=\"textarea\"\r\n\r\n                            required\r\n                            onChange={(e) => this.setState({ title: e.target.value })}\r\n                            value={this.state.about}\r\n                            style={{ height: 150 }}\r\n                        />\r\n                    </FormGroup> <br />\r\n\r\n                    <Container className=\"text-center\">\r\n                        <Button type=\"submit\" color=\"success\">Update Profile</Button>\r\n                    </Container> <br />\r\n\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EditProfile;","import React, { Component } from \"react\";\r\nimport { Button, Col, Card, CardSubtitle, CardText, CardTitle, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\n\r\nclass UpdateNote extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { id, title, noteCategory, description, createdAt, lastModified } = props.location.state.note;\r\n\r\n        this.state = {\r\n            id: id,\r\n            title: title,\r\n            description: description,\r\n            createdAt: createdAt,\r\n            lastModified: lastModified,\r\n            noteCategory: noteCategory,\r\n        }\r\n    }\r\n\r\n\r\n    //Method Goes Here\r\n    updateNote = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const request = { ...this.state };\r\n        await api.put(\"/note\", request).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                toast.success(\"Note Updated Successfully...\");\r\n                this.props.history.push(\"/\");\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"Something Went Wrong While Updating Note!!!\");\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n                <h3>Edit Your Note..</h3><br />\r\n\r\n                <Form onSubmit={this.updateNote}>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"title\">Enter Note Heading :</Label>\r\n                        <Input\r\n                            id=\"title\"\r\n\r\n                            name=\"title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Title of your awesome Note...\"\r\n                            required\r\n                            onChange={(e) => this.setState({ title: e.target.value })}\r\n                            value={this.state.title}\r\n                            style={{ height: 46 }, { textShadow: \"-moz-initial\" }}\r\n                        />\r\n                    </FormGroup> <br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Describe Your Note :</Label>\r\n                        <Input\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"your awesome Note...\"\r\n                            required\r\n                            onChange={(e) => this.setState({ description: e.target.value })}\r\n                            value={this.state.description}\r\n                            style={{ height: 120 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"category\">Describe Your Note :</Label>\r\n                        <Input\r\n                            id=\"category\"\r\n                            name=\"category\"\r\n                            type=\"text\"\r\n                            required\r\n                            placeholder=\"Note Category...\"\r\n                            onChange={(e) => this.setState({ noteCategory: e.target.value })}\r\n                            value={this.state.noteCategory}\r\n                            style={{ height: 46 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <Button type=\"submit\" color=\"success\">Update Note</Button><br /><br />\r\n\r\n                </Form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UpdateNote;","import React, { Component } from \"react\";\r\nimport { Button, Col, Card, CardSubtitle, CardText, CardTitle, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport NoteCard from \"./NoteCard\";\r\nimport api from \"../Api/Note\";\r\n\r\nclass ShowNoteByCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { id, noteCategory } = props.location.state.note;\r\n\r\n        this.state = {\r\n            noteCategory: noteCategory,\r\n            notes: [\"\"],\r\n        };\r\n    }\r\n\r\n\r\n    /* renderNoteList = this.state.notes.map(note => {\r\n         return <NoteCard note={note} key={note.id} />;\r\n     });*/\r\n\r\n    //Method Goes Here\r\n    fetchNoteByCategory = async () => {\r\n\r\n        await api.get(`/category/${this.state.noteCategory}`).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                toast.success(\"Note Updated Successfully...\");\r\n\r\n\r\n                this.setState({ notes: response.data });\r\n                console.log(this.state.notes);\r\n\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"Something Went Wrong While Updating Note!!!\");\r\n            }\r\n        )\r\n    }\r\n\r\n    //Just Before Rendering\r\n    componentDidMount() {\r\n        this.fetchNoteByCategory();\r\n        console.log(this.state.notes);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n                <h3>Showing Notes Of {this.state.noteCategory}</h3><br />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ShowNoteByCategory;","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\n\r\nclass SignUp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            about: \"\",\r\n        }\r\n\r\n    }\r\n\r\n    //function for creating account on our server\r\n    createAccount = async (e) => {\r\n\r\n        e.preventDefault();\r\n        if (this.state.name === \"\" || this.state.email === \"\" || this.state.password === \"\" || this.state.about === \"\") {\r\n            toast.error(\"All Fields Are Required!!\");\r\n            console.log(\"All Fields Are Required!!\");\r\n            return;\r\n        }\r\n\r\n        const request = { ...this.state };\r\n\r\n        await api.post(\"/register\", request).then(\r\n            (response) => {\r\n                console.log(response.data);\r\n                toast.success(\"Account Created Successfully...\");\r\n                this.props.history.push(\"/login\");\r\n            },\r\n\r\n            (error) => {\r\n                console.log(error);\r\n                toast.error(\"Something Went Wrong While Creating Account!!!\");\r\n            }\r\n        );\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            about: \"\",\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Create Account to Save Your Notes..</h2>\r\n                <Form onSubmit={this.createAccount}>\r\n                    <FormGroup>\r\n                        <Label for=\"username\">Enter Full Name :</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            required\r\n                            onChange={(e) => this.setState({ name: e.target.value })}\r\n                            value={this.state.name}\r\n                            placeholder=\"Enter your name...\"\r\n                            style={{ height: 56 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"useremail\">Enter Email :</Label>\r\n                        <Input\r\n                            type=\"email\"\r\n                            id=\"useremail\"\r\n                            name=\"useremail\"\r\n                            required\r\n                            onChange={(e) => this.setState({ email: e.target.value })}\r\n                            value={this.state.email}\r\n                            placeholder=\"yourmail@email.com...\"\r\n                            style={{ height: 56 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"password\">Enter Password :</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            required\r\n                            onChange={(e) => this.setState({ password: e.target.value })}\r\n                            value={this.state.password}\r\n                            placeholder=\"Your password...\"\r\n                            style={{ height: 56 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"username\">About YourSelf :</Label>\r\n                        <Input\r\n                            type=\"textarea\"\r\n                            id=\"about\"\r\n                            name=\"about\"\r\n                            required\r\n                            onChange={(e) => this.setState({ about: e.target.value })}\r\n                            value={this.state.about}\r\n                            placeholder=\"Tell us about yourself...\"\r\n                            style={{ height: 100 }}\r\n                        />\r\n                    </FormGroup><br />\r\n                    <Container className=\"text-left\">\r\n                        <Button color=\"success\">Create Account</Button>\r\n                    </Container><br />\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignUp;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText\r\n} from 'reactstrap';\r\n\r\n\r\n\r\nconst NavBar = (props) => {\r\n    //Destructuring...\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    //Firing this toogle method on nav click\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar style={{ padding: 8 }} color=\"primary\" dark expand=\"md\">\r\n\r\n                <NavbarBrand href=\"/\">NoteBook : Cloud NoteTaker App</NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n\r\n                    <Nav className=\"mr-auto\" navbar>\r\n\r\n                        <NavItem>\r\n\r\n                            <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/add\">Create Note</Link>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/\">Show Notes</Link>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/account\">My Account</Link>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/reset\">Reset Password</Link>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/edit-profile\">Edit Profile</Link>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/login\">Login</Link>\r\n                        </NavItem>\r\n\r\n                        <NavItem>\r\n                            <Link className=\"nav-link active\" to=\"/signup\">Create Account</Link>\r\n                        </NavItem>\r\n\r\n\r\n\r\n                        <UncontrolledDropdown nav inNavbar>\r\n\r\n                            <DropdownToggle nav caret>\r\n                                Shorty\r\n                            </DropdownToggle>\r\n\r\n                            <DropdownMenu color=\"primary\" right>\r\n\r\n                                <DropdownItem>\r\n\r\n                                    <NavLink href=\"/\">Home</NavLink>\r\n\r\n                                </DropdownItem>\r\n\r\n                                <DropdownItem divider />\r\n\r\n                                <DropdownItem>\r\n\r\n                                    <NavLink href=\"/add\">Add Links</NavLink>\r\n\r\n                                </DropdownItem>\r\n\r\n\r\n                                <DropdownItem divider />\r\n\r\n                                <DropdownItem>\r\n\r\n                                    <NavLink href=\"/\">View Links</NavLink>\r\n\r\n                                </DropdownItem>\r\n\r\n                                <DropdownItem divider />\r\n\r\n                                <DropdownItem>\r\n\r\n                                    <NavLink href=\"/login\">Login</NavLink>\r\n\r\n                                </DropdownItem>\r\n\r\n                                <DropdownItem divider />\r\n\r\n                                <DropdownItem>\r\n\r\n                                    <NavLink href=\"/account\">Create Account</NavLink>\r\n\r\n                                </DropdownItem>\r\n\r\n                                <DropdownItem divider />\r\n\r\n                                <DropdownItem>\r\n\r\n                                    <NavLink href=\"/\">Log Out</NavLink>\r\n\r\n\r\n                                </DropdownItem>\r\n\r\n                                <DropdownItem divider />\r\n\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                    </Nav>\r\n\r\n\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport api from \"../Api/Note\";\r\n\r\nclass CreateNotes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\",\r\n            noteCategory: \"\",\r\n        };\r\n    }\r\n\r\n\r\n    handleMultipleArray(event, index) {\r\n        const { target } = event;\r\n        const { name, description } = target;\r\n\r\n        this.setState(prevState => {\r\n            const noteCategory = [...prevState.noteCategory];\r\n            noteCategory[index] = { ...noteCategory[index], [name]: target.value, [description]: target.value };\r\n            return { noteCategory };\r\n        });\r\n    }\r\n\r\n    createNote = async (e) => {\r\n        e.preventDefault();\r\n\r\n        //Calling function from props and setting state parameter..\r\n        this.props.createNoteHandler(this.state);\r\n        console.log(this.state);\r\n\r\n        //After creating note removing state's previous data(note)\r\n        this.setState({\r\n            title: \"\",\r\n            description: \"\",\r\n            noteCategory: \"\",\r\n        });\r\n\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><br />\r\n                <h3>Create Your Awesome Note...</h3><br />\r\n                <Form onSubmit={this.createNote}>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"title\">Enter Note Heading :</Label>\r\n                        <Input\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            type=\"text\"\r\n                            placeholder=\"Title of your awesome Note...\"\r\n                            required\r\n                            onChange={(e) => this.setState({ title: e.target.value })}\r\n                            value={this.state.title}\r\n                            style={{ height: 46 }}\r\n                        />\r\n                    </FormGroup> <br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Describe Your Note :</Label>\r\n                        <Input\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            type=\"textarea\"\r\n                            placeholder=\"your awesome Note...\"\r\n                            required\r\n                            onChange={(e) => this.setState({ description: e.target.value })}\r\n                            value={this.state.description}\r\n                            style={{ height: 120 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"category\">Describe Your Note :</Label>\r\n                        <Input\r\n                            id=\"category\"\r\n                            name=\"category\"\r\n                            type=\"text\"\r\n                            required\r\n                            placeholder=\"Note Category...\"\r\n                            onChange={(e) => this.setState({ noteCategory: e.target.value })}\r\n                            value={this.state.noteCategory}\r\n                            style={{ height: 46 }}\r\n                        />\r\n                    </FormGroup><br />\r\n\r\n                    <Button type=\"submit\" color=\"success\">Create Note</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNotes;","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { toast } from \"react-toastify\";\nimport api from \"../Api/Note\"\nimport Login from \"../Entry/Login\";\nimport NoteList from \"./NoteList\";\nimport MyAccount from \"./MyAccount\";\nimport ResetPassword from \"./ResetPassword\";\nimport EditProfile from \"./EditProfile\";\nimport UpdateNote from \"./UpdateNote\";\nimport ShowNoteByCategory from \"./ShowNoteByCategory\";\nimport SignUp from \"../Entry/SignUp\";\nimport NavBar from \"../Ui/NavBar\";\nimport CreateNotes from \"./CreateNotes\";\n\n\n\nfunction App() {\n\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    document.title = \"NoteBook || Cloud Note Taker\";\n  }, []);\n\n  //Setting Header of Auth-Token in every request\n  const settingHeader = () => {\n    const jwtToken = localStorage.getItem(\"authorization\");\n\n    api.interceptors.request.use(\n      function (config) {\n        if (jwtToken) {\n          config.headers[\"authorization\"] = \"Bearer \" + jwtToken;\n          console.log(\"Yeah..Interceptor gets triggered manually\");\n          toast.success(\"Auth Token Used..\");\n        }\n        return config;\n      },\n      function (err) {\n        return Promise.reject(err);\n      }\n    );\n  }\n\n  //Fetching notes from server\n  const fetchNotes = async () => {\n    settingHeader();\n    const response = await api.get(\"/note\");\n    return response;\n  }\n\n  //Creating Note\n  const createNoteHandler = async (noteData) => {\n\n    settingHeader();\n    const request = { ...noteData };\n    const response = await api.post(\"/note\", request);\n    setNotes([...notes, response.data]);\n\n  }\n\n  //Deleting Note from Server and Internal State\n  const deleteNote = async (noteId) => {\n\n    await api.delete(`/note/${noteId}`).then(\n      (response) => {\n        console.log(\"Note having Id of \" + noteId + \" deleted successfully from server...\");\n\n        const FilteredNotesList = notes.filter((note) => {\n          return note.id != noteId;\n        });\n\n        setNotes(FilteredNotesList);\n\n      },\n      (error) => {\n\n      }\n    )\n\n  }\n\n  useEffect(() => {\n\n    const gettingAllNotes = async () => {\n      const allNotes = await fetchNotes();\n      console.log(allNotes);\n      if (allNotes) setNotes(allNotes.data);\n    }\n    gettingAllNotes();\n\n  }, []);\n\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Container>\n          <Row>\n\n            <Col md={3}></Col>\n            <Col md={6}>\n\n              <Switch>\n                <Route path=\"/add\" render={(props) => (<CreateNotes {...props} createNoteHandler={createNoteHandler} />)} />\n\n                <Route path=\"/\" exact render={(props) => (<NoteList {...props} notees={notes} deleteNote={deleteNote} />)} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/signup\" component={SignUp} />\n                <Route path=\"/account\" component={MyAccount} />\n                <Route path=\"/reset\" component={ResetPassword} />\n                <Route path=\"/edit-profile\" component={EditProfile} />\n                <Route path=\"/note/:id\" component={UpdateNote} />\n                <Route path=\"/view-note/:category\" component={ShowNoteByCategory} />\n\n              </Switch>\n\n            </Col>\n            <Col md={3}></Col>\n\n          </Row>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}